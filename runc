#!/usr/bin/env bash

# NAME
#	runc - compile and run C code

# SYNOPSIS
#	runc SOURCE [ARGS]
#	runc STRING
#	runc [-i|-h]

# DESCRIPTION 
#	Compile and run C file or string,
#	using sensible headers and gcc flags 
#	
#	Without arguments, prints C template.
#	-i 	prompt mode. Submit with CTRL+D
#	-h 	help

# EXAMPLES
#	runc test.c
#	runc hello.c Bob
#	runc 'printf("%s\n", "Hello Bob!");'

# AUTHOR 
#	Francois Alcover

#=============================================================

runc_hd="\
#include <stdlib.h>
#include <stdio.h>
#include <stddef.h>
#include <stdint.h>
#include <stdbool.h>
#include <stdarg.h>
#include <math.h>
#include <inttypes.h>
#include <complex.h>
#include <float.h>
#include <string.h>
#include <limits.h>
#include <ctype.h>
#include <locale.h>
#include <time.h>
#include <assert.h>
#include <errno.h>
"

# -lc : useful ?
runc_flags="\
-std=gnu11 \
-lm \
-Wno-pedantic \
-Wno-unused-variable \
"

bold=$(tput bold)
norm=$(tput sgr0)


runc_help="\
runc - compile and run C code
USAGE:    

- run file :
${bold}runc hello.c [arg arg..]${norm}

- run string :
${bold}runc 'printf(\"Hello!\");'${norm}

- run prompt :
${bold}runc -i${norm}
int i = 10;
printf(\"%d\n\", i);
[CTRL+D]

- print template :
${bold}runc${norm}
"

runc_tpl="\
$runc_hd
int main (int argc, char **argv)
{
	@code
	return 0;
}
"

#=============================================================

# no args, print template
if [ $# -eq 0 ]; then
	echo "${runc_tpl/@code/}"
    exit 0
fi

# help
if 	[ "$1" == '-h' ] || [ "$1" == '--help' ]; then
	echo "$runc_help"
    exit 0
fi


# source is a file
if [ -f "$1" ]; then

	src=$1
	exe="/tmp/$(basename $src)"
	shift
	args=$@

# source is a string
else

	# interactive
	if 	[ "$1" = '-i' ]; then
		echo "Type your code then CTRL+D"
		code=$(</dev/stdin)

	# runc 'printf()'
	else
		code="$1"
	fi

	name=`mktemp -q`
	src="$name.c"
	exe="$name"
	echo -n "${runc_tpl/@code/$code}" > "$src"
	echo "[saved to $src]"
fi

gcc $runc_flags "$src" -o "$exe" && "$exe" $args && exit 0